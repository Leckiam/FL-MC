// DIRECTIVES
export { BooleanValueAccessorDirective as BooleanValueAccessor } from './directives/control-value-accessors/boolean-value-accessor';
export { NumericValueAccessorDirective as NumericValueAccessor } from './directives/control-value-accessors/numeric-value-accessor';
export { RadioValueAccessorDirective as RadioValueAccessor } from './directives/control-value-accessors/radio-value-accessor';
export { SelectValueAccessorDirective as SelectValueAccessor } from './directives/control-value-accessors/select-value-accessor';
export { TextValueAccessorDirective as TextValueAccessor } from './directives/control-value-accessors/text-value-accessor';
export { IonTabs } from './directives/navigation/ion-tabs';
export { IonBackButtonDelegateDirective as IonBackButtonDelegate } from './directives/navigation/ion-back-button';
export { NavDelegate } from './directives/navigation/nav-delegate';
export { IonRouterOutlet } from './directives/navigation/ion-router-outlet';
export { RouterLinkDelegateDirective as RouterLinkDelegate, RouterLinkWithHrefDelegateDirective as RouterLinkWithHrefDelegate, } from './directives/navigation/router-link-delegate';
export { NavParams } from './directives/navigation/nav-params';
export { IonModal } from './directives/overlays/modal';
export { IonPopover } from './directives/overlays/popover';
export * from './directives/proxies';
export * from './directives/validators';
// PROVIDERS
export { AngularDelegate } from './providers/angular-delegate';
export { ActionSheetController } from './providers/action-sheet-controller';
export { AlertController } from './providers/alert-controller';
export { LoadingController } from './providers/loading-controller';
export { MenuController } from './providers/menu-controller';
export { PickerController } from './providers/picker-controller';
export { ModalController } from './providers/modal-controller';
export { Platform } from './providers/platform';
export { PopoverController } from './providers/popover-controller';
export { ToastController } from './providers/toast-controller';
export { NavController } from './providers/nav-controller';
export { DomController } from './providers/dom-controller';
export { Config } from './providers/config';
export { AnimationController } from './providers/animation-controller';
export { GestureController } from './providers/gesture-controller';
// ROUTER STRATEGY
export { IonicRouteStrategy } from './util/ionic-router-reuse-strategy';
// TYPES
export * from './types/ionic-lifecycle-hooks';
// PACKAGE MODULE
export { IonicModule } from './ionic-module';
export { 
// UTILS
createAnimation, createGesture, iosTransitionAnimation, mdTransitionAnimation, IonicSlides, getPlatforms, isPlatform, getTimeGivenProgression, IonicSafeString, } from '@ionic/core';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsYUFBYTtBQUNiLE9BQU8sRUFBRSw2QkFBNkIsSUFBSSxvQkFBb0IsRUFBRSxNQUFNLDZEQUE2RCxDQUFDO0FBQ3BJLE9BQU8sRUFBRSw2QkFBNkIsSUFBSSxvQkFBb0IsRUFBRSxNQUFNLDZEQUE2RCxDQUFDO0FBQ3BJLE9BQU8sRUFBRSwyQkFBMkIsSUFBSSxrQkFBa0IsRUFBRSxNQUFNLDJEQUEyRCxDQUFDO0FBQzlILE9BQU8sRUFBRSw0QkFBNEIsSUFBSSxtQkFBbUIsRUFBRSxNQUFNLDREQUE0RCxDQUFDO0FBQ2pJLE9BQU8sRUFBRSwwQkFBMEIsSUFBSSxpQkFBaUIsRUFBRSxNQUFNLDBEQUEwRCxDQUFDO0FBQzNILE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUMzRCxPQUFPLEVBQUUsOEJBQThCLElBQUkscUJBQXFCLEVBQUUsTUFBTSx5Q0FBeUMsQ0FBQztBQUNsSCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFDbkUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDJDQUEyQyxDQUFDO0FBQzVFLE9BQU8sRUFDTCwyQkFBMkIsSUFBSSxrQkFBa0IsRUFDakQsbUNBQW1DLElBQUksMEJBQTBCLEdBQ2xFLE1BQU0sOENBQThDLENBQUM7QUFFdEQsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLG9DQUFvQyxDQUFDO0FBQy9ELE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDM0QsY0FBYyxzQkFBc0IsQ0FBQztBQUNyQyxjQUFjLHlCQUF5QixDQUFDO0FBRXhDLFlBQVk7QUFDWixPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDL0QsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFDNUUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQy9ELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQ25FLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUM3RCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUNqRSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDL0QsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ2hELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQ25FLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUMvRCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDM0QsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQzNELE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUM1QyxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUN2RSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUVuRSxrQkFBa0I7QUFDbEIsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sb0NBQW9DLENBQUM7QUFFeEUsUUFBUTtBQUNSLGNBQWMsK0JBQStCLENBQUM7QUFFOUMsaUJBQWlCO0FBQ2pCLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUU3QyxPQUFPO0FBQ0wsUUFBUTtBQUNSLGVBQWUsRUFDZixhQUFhLEVBQ2Isc0JBQXNCLEVBQ3RCLHFCQUFxQixFQUNyQixXQUFXLEVBQ1gsWUFBWSxFQUNaLFVBQVUsRUFDVix1QkFBdUIsRUFrQ3ZCLGVBQWUsR0F5Q2hCLE1BQU0sYUFBYSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gRElSRUNUSVZFU1xuZXhwb3J0IHsgQm9vbGVhblZhbHVlQWNjZXNzb3JEaXJlY3RpdmUgYXMgQm9vbGVhblZhbHVlQWNjZXNzb3IgfSBmcm9tICcuL2RpcmVjdGl2ZXMvY29udHJvbC12YWx1ZS1hY2Nlc3NvcnMvYm9vbGVhbi12YWx1ZS1hY2Nlc3Nvcic7XG5leHBvcnQgeyBOdW1lcmljVmFsdWVBY2Nlc3NvckRpcmVjdGl2ZSBhcyBOdW1lcmljVmFsdWVBY2Nlc3NvciB9IGZyb20gJy4vZGlyZWN0aXZlcy9jb250cm9sLXZhbHVlLWFjY2Vzc29ycy9udW1lcmljLXZhbHVlLWFjY2Vzc29yJztcbmV4cG9ydCB7IFJhZGlvVmFsdWVBY2Nlc3NvckRpcmVjdGl2ZSBhcyBSYWRpb1ZhbHVlQWNjZXNzb3IgfSBmcm9tICcuL2RpcmVjdGl2ZXMvY29udHJvbC12YWx1ZS1hY2Nlc3NvcnMvcmFkaW8tdmFsdWUtYWNjZXNzb3InO1xuZXhwb3J0IHsgU2VsZWN0VmFsdWVBY2Nlc3NvckRpcmVjdGl2ZSBhcyBTZWxlY3RWYWx1ZUFjY2Vzc29yIH0gZnJvbSAnLi9kaXJlY3RpdmVzL2NvbnRyb2wtdmFsdWUtYWNjZXNzb3JzL3NlbGVjdC12YWx1ZS1hY2Nlc3Nvcic7XG5leHBvcnQgeyBUZXh0VmFsdWVBY2Nlc3NvckRpcmVjdGl2ZSBhcyBUZXh0VmFsdWVBY2Nlc3NvciB9IGZyb20gJy4vZGlyZWN0aXZlcy9jb250cm9sLXZhbHVlLWFjY2Vzc29ycy90ZXh0LXZhbHVlLWFjY2Vzc29yJztcbmV4cG9ydCB7IElvblRhYnMgfSBmcm9tICcuL2RpcmVjdGl2ZXMvbmF2aWdhdGlvbi9pb24tdGFicyc7XG5leHBvcnQgeyBJb25CYWNrQnV0dG9uRGVsZWdhdGVEaXJlY3RpdmUgYXMgSW9uQmFja0J1dHRvbkRlbGVnYXRlIH0gZnJvbSAnLi9kaXJlY3RpdmVzL25hdmlnYXRpb24vaW9uLWJhY2stYnV0dG9uJztcbmV4cG9ydCB7IE5hdkRlbGVnYXRlIH0gZnJvbSAnLi9kaXJlY3RpdmVzL25hdmlnYXRpb24vbmF2LWRlbGVnYXRlJztcbmV4cG9ydCB7IElvblJvdXRlck91dGxldCB9IGZyb20gJy4vZGlyZWN0aXZlcy9uYXZpZ2F0aW9uL2lvbi1yb3V0ZXItb3V0bGV0JztcbmV4cG9ydCB7XG4gIFJvdXRlckxpbmtEZWxlZ2F0ZURpcmVjdGl2ZSBhcyBSb3V0ZXJMaW5rRGVsZWdhdGUsXG4gIFJvdXRlckxpbmtXaXRoSHJlZkRlbGVnYXRlRGlyZWN0aXZlIGFzIFJvdXRlckxpbmtXaXRoSHJlZkRlbGVnYXRlLFxufSBmcm9tICcuL2RpcmVjdGl2ZXMvbmF2aWdhdGlvbi9yb3V0ZXItbGluay1kZWxlZ2F0ZSc7XG5cbmV4cG9ydCB7IE5hdlBhcmFtcyB9IGZyb20gJy4vZGlyZWN0aXZlcy9uYXZpZ2F0aW9uL25hdi1wYXJhbXMnO1xuZXhwb3J0IHsgSW9uTW9kYWwgfSBmcm9tICcuL2RpcmVjdGl2ZXMvb3ZlcmxheXMvbW9kYWwnO1xuZXhwb3J0IHsgSW9uUG9wb3ZlciB9IGZyb20gJy4vZGlyZWN0aXZlcy9vdmVybGF5cy9wb3BvdmVyJztcbmV4cG9ydCAqIGZyb20gJy4vZGlyZWN0aXZlcy9wcm94aWVzJztcbmV4cG9ydCAqIGZyb20gJy4vZGlyZWN0aXZlcy92YWxpZGF0b3JzJztcblxuLy8gUFJPVklERVJTXG5leHBvcnQgeyBBbmd1bGFyRGVsZWdhdGUgfSBmcm9tICcuL3Byb3ZpZGVycy9hbmd1bGFyLWRlbGVnYXRlJztcbmV4cG9ydCB7IEFjdGlvblNoZWV0Q29udHJvbGxlciB9IGZyb20gJy4vcHJvdmlkZXJzL2FjdGlvbi1zaGVldC1jb250cm9sbGVyJztcbmV4cG9ydCB7IEFsZXJ0Q29udHJvbGxlciB9IGZyb20gJy4vcHJvdmlkZXJzL2FsZXJ0LWNvbnRyb2xsZXInO1xuZXhwb3J0IHsgTG9hZGluZ0NvbnRyb2xsZXIgfSBmcm9tICcuL3Byb3ZpZGVycy9sb2FkaW5nLWNvbnRyb2xsZXInO1xuZXhwb3J0IHsgTWVudUNvbnRyb2xsZXIgfSBmcm9tICcuL3Byb3ZpZGVycy9tZW51LWNvbnRyb2xsZXInO1xuZXhwb3J0IHsgUGlja2VyQ29udHJvbGxlciB9IGZyb20gJy4vcHJvdmlkZXJzL3BpY2tlci1jb250cm9sbGVyJztcbmV4cG9ydCB7IE1vZGFsQ29udHJvbGxlciB9IGZyb20gJy4vcHJvdmlkZXJzL21vZGFsLWNvbnRyb2xsZXInO1xuZXhwb3J0IHsgUGxhdGZvcm0gfSBmcm9tICcuL3Byb3ZpZGVycy9wbGF0Zm9ybSc7XG5leHBvcnQgeyBQb3BvdmVyQ29udHJvbGxlciB9IGZyb20gJy4vcHJvdmlkZXJzL3BvcG92ZXItY29udHJvbGxlcic7XG5leHBvcnQgeyBUb2FzdENvbnRyb2xsZXIgfSBmcm9tICcuL3Byb3ZpZGVycy90b2FzdC1jb250cm9sbGVyJztcbmV4cG9ydCB7IE5hdkNvbnRyb2xsZXIgfSBmcm9tICcuL3Byb3ZpZGVycy9uYXYtY29udHJvbGxlcic7XG5leHBvcnQgeyBEb21Db250cm9sbGVyIH0gZnJvbSAnLi9wcm92aWRlcnMvZG9tLWNvbnRyb2xsZXInO1xuZXhwb3J0IHsgQ29uZmlnIH0gZnJvbSAnLi9wcm92aWRlcnMvY29uZmlnJztcbmV4cG9ydCB7IEFuaW1hdGlvbkNvbnRyb2xsZXIgfSBmcm9tICcuL3Byb3ZpZGVycy9hbmltYXRpb24tY29udHJvbGxlcic7XG5leHBvcnQgeyBHZXN0dXJlQ29udHJvbGxlciB9IGZyb20gJy4vcHJvdmlkZXJzL2dlc3R1cmUtY29udHJvbGxlcic7XG5cbi8vIFJPVVRFUiBTVFJBVEVHWVxuZXhwb3J0IHsgSW9uaWNSb3V0ZVN0cmF0ZWd5IH0gZnJvbSAnLi91dGlsL2lvbmljLXJvdXRlci1yZXVzZS1zdHJhdGVneSc7XG5cbi8vIFRZUEVTXG5leHBvcnQgKiBmcm9tICcuL3R5cGVzL2lvbmljLWxpZmVjeWNsZS1ob29rcyc7XG5cbi8vIFBBQ0tBR0UgTU9EVUxFXG5leHBvcnQgeyBJb25pY01vZHVsZSB9IGZyb20gJy4vaW9uaWMtbW9kdWxlJztcblxuZXhwb3J0IHtcbiAgLy8gVVRJTFNcbiAgY3JlYXRlQW5pbWF0aW9uLFxuICBjcmVhdGVHZXN0dXJlLFxuICBpb3NUcmFuc2l0aW9uQW5pbWF0aW9uLFxuICBtZFRyYW5zaXRpb25BbmltYXRpb24sXG4gIElvbmljU2xpZGVzLFxuICBnZXRQbGF0Zm9ybXMsXG4gIGlzUGxhdGZvcm0sXG4gIGdldFRpbWVHaXZlblByb2dyZXNzaW9uLFxuICAvLyBUWVBFU1xuICBBbmltYXRpb24sXG4gIEFuaW1hdGlvbkJ1aWxkZXIsXG4gIEFuaW1hdGlvbkNhbGxiYWNrT3B0aW9ucyxcbiAgQW5pbWF0aW9uRGlyZWN0aW9uLFxuICBBbmltYXRpb25GaWxsLFxuICBBbmltYXRpb25LZXlGcmFtZXMsXG4gIEFuaW1hdGlvbkxpZmVjeWNsZSxcbiAgR2VzdHVyZSxcbiAgR2VzdHVyZUNvbmZpZyxcbiAgR2VzdHVyZURldGFpbCxcbiAgTmF2Q29tcG9uZW50V2l0aFByb3BzLFxuICBTcGlubmVyVHlwZXMsXG4gIEFjY29yZGlvbkdyb3VwQ3VzdG9tRXZlbnQsXG4gIEFjY29yZGlvbkdyb3VwQ2hhbmdlRXZlbnREZXRhaWwsXG4gIEJyZWFkY3J1bWJDdXN0b21FdmVudCxcbiAgQnJlYWRjcnVtYkNvbGxhcHNlZENsaWNrRXZlbnREZXRhaWwsXG4gIEFjdGlvblNoZWV0T3B0aW9ucyxcbiAgQWN0aW9uU2hlZXRCdXR0b24sXG4gIEFsZXJ0T3B0aW9ucyxcbiAgQWxlcnRJbnB1dCxcbiAgQWxlcnRCdXR0b24sXG4gIEJhY2tCdXR0b25FdmVudCxcbiAgQ2hlY2tib3hDdXN0b21FdmVudCxcbiAgQ2hlY2tib3hDaGFuZ2VFdmVudERldGFpbCxcbiAgRGF0ZXRpbWVDdXN0b21FdmVudCxcbiAgRGF0ZXRpbWVDaGFuZ2VFdmVudERldGFpbCxcbiAgSW5maW5pdGVTY3JvbGxDdXN0b21FdmVudCxcbiAgSW5wdXRDdXN0b21FdmVudCxcbiAgSW5wdXRDaGFuZ2VFdmVudERldGFpbCxcbiAgSXRlbVJlb3JkZXJFdmVudERldGFpbCxcbiAgSXRlbVJlb3JkZXJDdXN0b21FdmVudCxcbiAgSXRlbVNsaWRpbmdDdXN0b21FdmVudCxcbiAgSW9uaWNTYWZlU3RyaW5nLFxuICBMb2FkaW5nT3B0aW9ucyxcbiAgTWVudUN1c3RvbUV2ZW50LFxuICBNb2RhbE9wdGlvbnMsXG4gIE5hdkN1c3RvbUV2ZW50LFxuICBQaWNrZXJPcHRpb25zLFxuICBQaWNrZXJCdXR0b24sXG4gIFBpY2tlckNvbHVtbixcbiAgUGlja2VyQ29sdW1uT3B0aW9uLFxuICBQbGF0Zm9ybUNvbmZpZyxcbiAgUG9wb3Zlck9wdGlvbnMsXG4gIFJhZGlvR3JvdXBDdXN0b21FdmVudCxcbiAgUmFkaW9Hcm91cENoYW5nZUV2ZW50RGV0YWlsLFxuICBSYW5nZUN1c3RvbUV2ZW50LFxuICBSYW5nZUNoYW5nZUV2ZW50RGV0YWlsLFxuICBSYW5nZUtub2JNb3ZlU3RhcnRFdmVudERldGFpbCxcbiAgUmFuZ2VLbm9iTW92ZUVuZEV2ZW50RGV0YWlsLFxuICBSZWZyZXNoZXJDdXN0b21FdmVudCxcbiAgUmVmcmVzaGVyRXZlbnREZXRhaWwsXG4gIFJvdXRlckV2ZW50RGV0YWlsLFxuICBSb3V0ZXJDdXN0b21FdmVudCxcbiAgU2Nyb2xsQmFzZUN1c3RvbUV2ZW50LFxuICBTY3JvbGxCYXNlRGV0YWlsLFxuICBTY3JvbGxEZXRhaWwsXG4gIFNjcm9sbEN1c3RvbUV2ZW50LFxuICBTZWFyY2hiYXJDdXN0b21FdmVudCxcbiAgU2VhcmNoYmFyQ2hhbmdlRXZlbnREZXRhaWwsXG4gIFNlYXJjaGJhcklucHV0RXZlbnREZXRhaWwsXG4gIFNlZ21lbnRDaGFuZ2VFdmVudERldGFpbCxcbiAgU2VnbWVudEN1c3RvbUV2ZW50LFxuICBTZWdtZW50VmFsdWUsXG4gIFNlbGVjdENoYW5nZUV2ZW50RGV0YWlsLFxuICBTZWxlY3RDdXN0b21FdmVudCxcbiAgVGFic0N1c3RvbUV2ZW50LFxuICBUZXh0YXJlYUNoYW5nZUV2ZW50RGV0YWlsLFxuICBUZXh0YXJlYUN1c3RvbUV2ZW50LFxuICBUb2FzdE9wdGlvbnMsXG4gIFRvYXN0QnV0dG9uLFxuICBUb2FzdExheW91dCxcbiAgVG9nZ2xlQ2hhbmdlRXZlbnREZXRhaWwsXG4gIFRvZ2dsZUN1c3RvbUV2ZW50LFxufSBmcm9tICdAaW9uaWMvY29yZSc7XG4iXX0=